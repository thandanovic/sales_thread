<%= form_with(model: [product.shop, product], class: "space-y-6") do |form| %>
  <% if product.errors.any? %>
    <div class="rounded-md bg-red-50 p-4">
      <h3 class="text-sm font-medium text-red-800">
        <%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:
      </h3>
      <ul class="mt-2 text-sm text-red-700 list-disc pl-5">
        <% product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
    <div class="sm:col-span-2">
      <%= form.label :title, class: "block text-sm font-medium text-gray-700" %>
      <%= form.text_field :title, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div>
      <%= form.label :sku, class: "block text-sm font-medium text-gray-700" %>
      <%= form.text_field :sku, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div>
      <%= form.label :brand, class: "block text-sm font-medium text-gray-700" %>
      <%= form.text_field :brand, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div>
      <%= form.label :category, class: "block text-sm font-medium text-gray-700" %>
      <%= form.text_field :category, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div>
      <%= form.label :price, "Base Price", class: "block text-sm font-medium text-gray-700" %>
      <%= form.number_field :price, step: 0.01, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div>
      <%= form.label :currency, class: "block text-sm font-medium text-gray-700" %>
      <%= form.text_field :currency, value: (product.currency || 'BAM'), class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div>
      <%= form.label :margin, "Margin (%)", class: "block text-sm font-medium text-gray-700" %>
      <%= form.number_field :margin, step: 0.01, value: (product.margin || 0), class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
      <p class="mt-1 text-xs text-gray-500">Final price will be calculated automatically: Base Price Ã— (1 + Margin%/100)</p>
    </div>

    <div>
      <%= form.label :final_price, class: "block text-sm font-medium text-gray-700" %>
      <%= form.number_field :final_price, step: 0.01, value: (product.final_price || 0), disabled: true, class: "mt-1 bg-gray-100 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
      <p class="mt-1 text-xs text-gray-500">Calculated automatically based on base price and margin</p>
    </div>

    <div>
      <%= form.label :stock, class: "block text-sm font-medium text-gray-700" %>
      <%= form.number_field :stock, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div class="sm:col-span-2">
      <%= form.label :description, class: "block text-sm font-medium text-gray-700" %>
      <%= form.text_area :description, rows: 4, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
    </div>

    <div class="sm:col-span-2">
      <%= form.label :olx_category_template_id, "OLX Category Template", class: "block text-sm font-medium text-gray-700" %>
      <%= form.collection_select :olx_category_template_id,
          product.shop.olx_category_templates,
          :id,
          :display_name,
          { include_blank: "Select a template (optional)" },
          class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
      <p class="mt-1 text-xs text-gray-500">Select a template to enable publishing to OLX with predefined category and location settings</p>
    </div>
  </div>

  <!-- OLX Listing Fields -->
  <div class="border-t border-gray-200 pt-6">
    <div class="flex items-center justify-between mb-4">
      <div>
        <h3 class="text-lg font-medium text-gray-900">OLX Listing Content</h3>
        <p class="mt-1 text-sm text-gray-500">Customize the title and description that will appear on OLX</p>
      </div>
      <button type="button" id="auto-generate-btn" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
        </svg>
        Auto-Generate from Template
      </button>
    </div>

    <div class="grid grid-cols-1 gap-6">
      <div>
        <%= form.label :olx_title, "OLX Title", class: "block text-sm font-medium text-gray-700" %>
        <%= form.text_field :olx_title, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "Will be auto-generated from template if left blank" %>
        <p class="mt-1 text-xs text-gray-500">The title that will be displayed on OLX. Leave blank to auto-generate from template.</p>
      </div>

      <div>
        <%= form.label :olx_description, "OLX Description", class: "block text-sm font-medium text-gray-700" %>
        <%= form.text_area :olx_description, rows: 6, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "Will be auto-generated from template if left blank" %>
        <p class="mt-1 text-xs text-gray-500">The description that will be displayed on OLX. Leave blank to auto-generate based on template's description filter.</p>
      </div>
    </div>
  </div>

  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
    <div class="sm:col-span-2">
      <%= form.label :images, "Product Images", class: "block text-sm font-medium text-gray-700" %>
      <%= form.file_field :images, multiple: true, class: "mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-indigo-50 file:text-indigo-700 hover:file:bg-indigo-100" %>
    </div>
  </div>

  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel", shop_products_path(product.shop), class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" %>
    <%= form.submit class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700" %>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const autoGenerateBtn = document.getElementById('auto-generate-btn');
  const titleField = document.getElementById('product_title');
  const brandField = document.getElementById('product_brand');
  const skuField = document.getElementById('product_sku');
  const categoryField = document.getElementById('product_category');
  const priceField = document.getElementById('product_price');
  const descriptionField = document.getElementById('product_description');
  const olxTitleField = document.getElementById('product_olx_title');
  const olxDescriptionField = document.getElementById('product_olx_description');
  const templateSelect = document.getElementById('product_olx_category_template_id');

  if (autoGenerateBtn) {
    autoGenerateBtn.addEventListener('click', async function() {
      const templateId = templateSelect.value;

      if (!templateId) {
        alert('Please select an OLX Category Template first');
        return;
      }

      // Fetch template data to get title_template and description_filter
      try {
        const response = await fetch(`/shops/<%= product.shop.id %>/olx_category_templates/${templateId}.json`);
        if (!response.ok) {
          throw new Error('Failed to fetch template');
        }

        const template = await response.json();

        // Generate OLX title from title_template
        if (template.title_template) {
          let olxTitle = template.title_template;
          olxTitle = olxTitle.replace(/\{brand\}/gi, brandField?.value || '');
          olxTitle = olxTitle.replace(/\{title\}/gi, titleField?.value || '');
          olxTitle = olxTitle.replace(/\{sku\}/gi, skuField?.value || '');
          olxTitle = olxTitle.replace(/\{category\}/gi, categoryField?.value || '');
          olxTitle = olxTitle.replace(/\{price\}/gi, priceField?.value || '');

          olxTitleField.value = olxTitle;
        }

        // For description, we'll need to filter the description based on description_filter
        // This is complex, so for now we'll just copy the full description
        // The server will handle the filtering when saving
        if (descriptionField?.value && !olxDescriptionField.value) {
          olxDescriptionField.value = descriptionField.value;
        }

        // Show success message
        const btn = autoGenerateBtn;
        const originalText = btn.innerHTML;
        btn.innerHTML = '<svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" /></svg>Generated!';
        btn.classList.add('bg-green-50', 'text-green-700');

        setTimeout(() => {
          btn.innerHTML = originalText;
          btn.classList.remove('bg-green-50', 'text-green-700');
        }, 2000);

      } catch (error) {
        console.error('Error generating OLX fields:', error);
        alert('Error generating OLX fields. Please try again.');
      }
    });
  }
});
</script>
